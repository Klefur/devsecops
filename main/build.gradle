plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version "6.0.1.5171"
}


group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sonarqube {
    properties {
        property "sonar.projectKey", "devsecops"
        property "sonar.projectName", "devsecops"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_3be38676070c68cdb2d1f10c19022ca47c48dece"
		property "sonar.tests", "test"
        property "sonar.java.binaries", "$buildDir/classes"

		// Especifica la ubicaci√≥n del reporte de cobertura si corresponde (por ejemplo con JaCoCo)
        property "sonar.javascript.lcov.reportPaths", "build/reports/lcov-report/lcov-report.json"
        
        // Si tienes otros reportes de cobertura (por ejemplo, Jacoco en Java)
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.opencsv:opencsv:5.6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
